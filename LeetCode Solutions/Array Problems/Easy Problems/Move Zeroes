Given an integer array nums, move all 0's to the end of it while maintaining the relative order of the non-zero elements.

Note that you must do this in-place without making a copy of the array.

 

Example 1:

Input: nums = [0,1,0,3,12]
Output: [1,3,12,0,0]
Example 2:

Input: nums = [0]
Output: [0]
 

Constraints:

1 <= nums.length <= 104
-231 <= nums[i] <= 231 - 1
 

Follow up: Could you minimize the total number of operations done?

***************************************************************************************************************************************


1)Solution
*************************************************************************************************

class Solution {
    public void moveZeroes(int[] nums) {
       // first find non -zeros elements from nums[i] 
       // store it into muns[j] and j++
       // and finally store 0 in nums[j]

       
    int j = 0;
    

    // first find non -zeros elements from nums[i]
      for(int i=0; i<nums.length; i++)
      {
          if(nums[i]!=0)
          {
                   // store it into muns[j] and j++
               nums[j]=nums[i];
               j++;

          }
      }
       for(; j<nums.length; j++)
       {
            // and finally store 0 in nums[j]
           nums[j]=0;
       }
    }
}
********************************************************************************************************
