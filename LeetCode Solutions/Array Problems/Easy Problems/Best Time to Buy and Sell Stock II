You are given an integer array prices where prices[i] is the price of a given stock on the ith day.

On each day, you may decide to buy and/or sell the stock. You can only hold at most one share of the stock at any time. However, you can buy it then immediately sell it on the same day.

Find and return the maximum profit you can achieve.

 

Example 1:

Input: prices = [7,1,5,3,6,4]
Output: 7
Explanation: Buy on day 2 (price = 1) and sell on day 3 (price = 5), profit = 5-1 = 4.
Then buy on day 4 (price = 3) and sell on day 5 (price = 6), profit = 6-3 = 3.
Total profit is 4 + 3 = 7.
Example 2:

Input: prices = [1,2,3,4,5]
Output: 4
Explanation: Buy on day 1 (price = 1) and sell on day 5 (price = 5), profit = 5-1 = 4.
Total profit is 4.
Example 3:

Input: prices = [7,6,4,3,1]
Output: 0
Explanation: There is no way to make a positive profit, so we never buy the stock to achieve the maximum profit of 0.
 

Constraints:

1 <= prices.length <= 3 * 104
0 <= prices[i] <= 104

*********************************************************************************************************************************************************

1)Solution
****************************************

class Solution {
    public int maxProfit(int[] A) {                        
        int n = A.length, lastBuy = -A[0], lastSold = 0;
        if (n == 0) return 0;
                                
        for (int i = 1; i < n; i++) {
            int curBuy = Math.max(lastBuy, lastSold - A[i]);
            int curSold = Math.max(lastSold, lastBuy + A[i]);
            lastBuy = curBuy;
            lastSold = curSold;
        }
        
        return lastSold;
    }
}

**********************************************


2)Solution
***********************************************
class Solution {
    public int maxProfit(int[] A) {                        
       

       // we can just buy and hold for one day we have to sell on next peak
       int profit =0;

       for(int i =1; i<A.length; i++)
       {

           // compare with previous  if current is greater then 
           //eg   prices = [7,1,5,3,6,4]   
           // 7>no value    i++
           // 1>7    no     i++
           // 5>1    yes    so  5-1 = 4  i++  
           // 3>5    no     i++
           // 6>3    yes    so  6-3 = 3  i++
           // 4>6    no     i++
           //stop

          if(A[i] > A[i-1])
          {

              // substract curretnt - previous and add,update profit
              //profit=0
              //profit=4
              //profit=3
              //profit =4+3 = 7
              profit+=(A[i]-A[i-1]);
          }

       }
       //return profit
       return profit;
    }
}

**********************************************************************************************************************
